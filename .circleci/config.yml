# This config uses the `.circleci/extended/orb-test.yml` as its base, and then publishes the app to S3.
# The workflow contained here demonstrates a practical application of `post-steps`
# and using workspace persistence
version: 2.1

orbs:
  node: circleci/node@4.1
  # The S3 orb will setup the aws-cli and quickly copy or sync anything to s3.
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/aws-s3
  # NOTE: Environment variables containing the necessary secrets can be setup in the CircleCI UI
  # See here https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project
  aws-s3: circleci/aws-s3@2.0
jobs:
      build:
        docker:
          - image: circleci/node:12.9.1-browsers
    
        working_directory: ~/repo
    
        steps:
          - checkout
    
          - restore_cache:
              keys:
                - v1-dependencies-{{ checksum "package.json" }}
                # fallback to using the latest cache if no exact match is found
                - v1-dependencies-
          - run: yarn install
    
          - save_cache:
              paths:
                - node_modules
                - ~/.npm
                - ~/.cache
              key: v1-dependencies-{{ checksum "package.json" }}
    
          - run: yarn build
    
          - aws-s3/sync:
              from: build
              to: "s3://strataflights.co.uk"
              arguments: |
                --acl public-read \
                --cache-control "max-age=86400"

